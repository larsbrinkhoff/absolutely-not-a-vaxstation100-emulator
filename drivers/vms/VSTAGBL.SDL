module $VSTAGBL;
/*
/*++
/* FACILITY:
/*   VAX WORKSTATIONS
/*
/* ABSTRACT:
/*
/*  This file contains the predefined symbols given in the manual for the
/*  VAXstation Programmer's Library. Only those symbols which do NOT define
/*  VSTA error message symbols are defined here.
/*
/* ENVIRONMENT:
/*   VAX workstation: 780, 750, 730 running VMS with at least one VAXstation
/*   graphics subsystem.
/*
/*
/* RENDITION SYMBOLS
/*
    AGGREGATE REND_BITS STRUCTURE PREFIX VSTA$;
	REND_BOLD	BITFIELD MASK;		/*BOLD RENDITION
	REND_ITALICS	BITFIELD MASK;		/*ITALICS RENDITION
	REND_UNDERSCORE	BITFIELD MASK;		/*UNDERSCORE RENDITION
	REND_BLINK	BITFIELD MASK;		/*BLINK RENDITION
	REND_REVERSE	BITFIELD MASK;		/*REVERSE VIDEO RENDITION
	REND_EXTRA	BITFIELD LENGTH 3 MASK; /*FOR FUTURE DEC ABUSE
	CONSTANT "REND_BLOCK_SIZE" EQUALS .;	/*LENGTH OF DATA BLOCK
	END REND_BITS;
/*
    CONSTANT VSTA$K_NONE EQUALS -1;     /* MEASURE TEXT SPECIAL
/*
/* FIELD FORMATS
/*
    CONSTANT VSTA$K_FF_LEFT EQUALS 0;
    CONSTANT VSTA$K_FF_RIGHT EQUALS 1;
    CONSTANT VSTA$K_FF_CENTER EQUALS 2;
/*
/* SDA OBJECT PROTECTION
/*
    CONSTANT VSTA$K_UNPROTECTED EQUALS -1;
    CONSTANT VSTA$K_DEFAULT_PROTECTION EQUALS %XFF0F;
/*
/* VIRTUAL KEYBOARD TRANSLATION TABLE IDS AND TIA CONFORMANCE LEVELS
/*
/* NOTE: MAKE SURE THE CONSTANT BELOW REFLECTS THE MAXIMUM VALID TRANSLATION
/*       TABLE NUMBER WHEN ADDING TRANSLATION TABLES. OTHERWISE, YOUR NEW
/*	 TABLE WILL BE IGNORED. TABLES THAT END IN _TYP ARE TYPEWRITER
/*	 TRANSLATION TABLES AND TABLES THAT END IN _DP ARE DATA PROCESSING
/*	 TRANSLATON TABLES. THE NAMES OF THE TABLES CORRESPOND TO THE
/*	 HARDWARE KEYBOARD OF THAT LANGUAGE.
/*
/* NOTE: TABLES 	1.)LK201-CB = LK201-CP
/*			2.)LK201-CM = LK201-CF
/*   
    CONSTANT
	VSTA$K_TT_DECMS_ENGLISH  EQUALS 0;	/*DEC MULTINATIONAL ENGLISH

    CONSTANT(	
	LK201_CA		/*DEC MULTINATIONAL ENGLISH(0)
	,LK201_CC_TYP		/*CANADIAN (FRENCH) TYPEWRITER(1)
	,LK201_CC_DP		/*CANADIAN (FRENCH) DATA PRO.(2)
	,LK201_CD_TYP		/*DANISH TYPEWRITER(3)
	,LK201_CD_DP		/*DANISH DATA PRO.(4)
	,LK201_CE_TYP		/*BRITISH TYPEWRITER(5)
	,LK201_CE_DP		/*BRITISH DATA PRO.(6)
	,LK201_CF_TYP		/*FINNISH TYPEWRITER(7)
	,LK201_CF_DP		/*FINNISH DATA PRO.(8)
	,LK201_CG_TYP		/*GERMAN/AUSTRIAN TYPEWRITER(9)
	,LK201_CG_DP		/*GERMAN/AUSTRIAN DATA PRO.(10)
	,LK201_CH_TYP		/*DUTCH TYPEWRITER(11)
	,LK201_CH_DP		/*DUTCH DATA PRO.(12)
	,LK201_CI_TYP		/*ITALIAN TYPEWRITER(13)
	,LK201_CI_DP		/*ITALIAN DATA PRO.(14)
	,LK201_CK_TYP		/*FRENCH/SWISS TYPEWRITER(15)
	,LK201_CK_DP		/*FRENCH/SWISS DATA PRO.(16)
	,LK201_CL_TYP		/*GERMAN/SWISS TYPEWRITER(17)
	,LK201_CL_DP		/*GERMAN/SWISS DATA PRO.(18)
	,LK201_CN_TYP		/*NORWEGIAN TYPEWRITER(19)
	,LK201_CN_DP		/*NORWEGIAN DATA PRO.(20)
	,LK201_CP_TYP		/*FRENCH/BELGIUM TYPEWRITER(21)
	,LK201_CP_DP		/*FRENCH/BELGIUM DATA PRO.(22)
	,LK201_CS_TYP		/*SPANISH TYPEWRITER(23)
	,LK201_CS_DP		/*SPANISH DATA PRO. (24)
	)
		EQUALS 0 INCREMENT 1 PREFIX VSTA$;

      CONSTANT	VSTA$K_LK201_CM_TYP	EQUALS 25;	/*SWEDISH TYPEWRITER(7)
      CONSTANT	VSTA$K_LK201_CM_DP	EQUALS 26;	/*SWEDISH DATA PRO.(8)
      CONSTANT	VSTA$K_LK201_CB_TYP	EQUALS 27;	/*FLEMISH TYPEWRITER(21)
      CONSTANT	VSTA$K_LK201_CB_DP	EQUALS 28;	/*FLEMISH DATA PRO.(22)

    CONSTANT
	VSTA$K_TT_MAX EQUALS 28;		/*MAX. VALID TRAN. TABLE OFFSET
    CONSTANT
	VSTA$K_TT_UNENCODED EQUALS -1;		/*UNENCODED KEYBOARD FOR VKB
/*
/* NRC constants. This list is ORDER DEPENDENT. Any new NRCs must be added
/* at the end (as the tables need be added to the ACP as well).
/*
	CONSTANT(
		NRC_ASCII,
		NRC_UK,
		NRC_FRENCH,
		NRC_FRCAN,
		NRC_NORDAN,
		NRC_FINNISH,
		NRC_GERMAN,
		NRC_DUTCH,
		NRC_ITALIAN,
		NRC_SWISS,
		NRC_SWEDISH,
		NRC_SPANISH,
		NRC_MULTINATIONAL
	) EQUALS 0 INCREMENT 1 PREFIX VSTA$;

/*
    CONSTANT(
	VKB_LEVEL_1,
	VKB_LEVEL_2
	) EQUALS 64 INCREMENT 64 PREFIX VSTA$;
/*
/* VIRTUAL KEYBOARD MODE BIT DEFINITIONS
/* NOTE: THESE BITS MUST CORRESPOND TO THE BIT DEFINITIONS IN VSVKB.SDL FOR
/*	 KEYBOARD STATE WITH RESPECT TO ORDER AND PADDING.
/*
    AGGREGATE VKB_MODE_BITS STRUCTURE PREFIX VSTA$;
	RESERVED	BITFIELD LENGTH 6;	/*RESERVED VKB STATE BITS
	LEVEL		BITFIELD MASK LENGTH 4;	/*VKB LEVEL 1/2 CONFORMANCE
	EIGHTBIT	BITFIELD MASK;		/*VKB NATIVE EIGHT-BIT/SEVEN-BIT
	KEYPAD		BITFIELD MASK;		/*VKB KEYPAD APPLICATION MODE
	CURSOR_KEY	BITFIELD MASK;		/*VKB CURSOR KEY MODE
	VT52		BITFIELD MASK;		/*VKB VT52 MODE
	NEW_LINE	BITFIELD MASK;		/*VKB NEW-LINE MODE
	EXTRA		BITFIELD LENGTH 1 MASK; /*FOR FUTURE DEC ABUSE
	CONSTANT "BLOCK_SIZE" EQUALS .;		/*LENGTH OF DATA BLOCK
	END VKB_MODE_BITS;
/*
/*
/*
/*  TEKTRONYX CHARACTERISTICS SYMBOLS
/*
/*
	CONSTANT	VSTA$K_TEK4014_GT_STRAP		EQUALS	%B1100000;
	CONSTANT	VSTA$K_TEK4014_GT_CREOT		EQUALS	%B1100000;
	CONSTANT	VSTA$K_TEK4014_GT_CR		EQUALS	%B1000000;
	CONSTANT	VSTA$K_TEK4014_GT_NONE		EQUALS  %B0000000;

	CONSTANT	VSTA$K_TEK4014_AUTO_CR_STRAP	EQUALS	%B10000000;
	CONSTANT	VSTA$K_TEK4014_AUTO_CR_LF	EQUALS	%B10000000;
	CONSTANT	VSTA$K_TEK4014_NO_AUTO_CR_LF	EQUALS	%B00000000;

	CONSTANT	VSTA$K_TEK4014_AUTO_LF_STRAP	EQUALS	%B100000000;
	CONSTANT	VSTA$K_TEK4014_AUTO_LF_CR	EQUALS	%B100000000;
	CONSTANT	VSTA$K_TEK4014_NO_AUTO_LF_CR	EQUALS	%B000000000;

	CONSTANT	VSTA$K_TEK4014_DEL_LOY_STRAP	EQUALS	%B1000000000;
	CONSTANT	VSTA$K_TEK4014_DEL_LOY		EQUALS	%B1000000000;
	CONSTANT	VSTA$K_TEK4014_DEL_NOT_LOY	EQUALS	%B0000000000;


/*
/*
/*  DEFINE THE GLOBAL NATIVE GRAPHICS SYMBOLS NEXT
/*
/*	
	CONSTANT(
		 COPY_AREA
		,DRAW_CURVE
		,PRINT_TEXT
		,FILL_AREA
		,FLOOD_AREA
		,MOVE_TEXT
		,BACKGROUND
		,NOOP
		,MOVE_OBJECT
		,LOAD_CURSOR
		,GETRCS
		,LAST_OPCODE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT OPCODE_TYPES EQUALS VSTA$K_LAST_OPCODE - 1 PREFIX VSTA$;


	CONSTANT READ			EQUALS 0 PREFIX VSTA$;
	CONSTANT WRITE			EQUALS 1 PREFIX VSTA$;
	CONSTANT DEVICE_BITPLANES 	EQUALS 1 PREFIX VSTA$;
	CONSTANT NATIVE_GRAPHICS 	EQUALS 1 PREFIX VSTA$;

	CONSTANT(
		 SRC_CONST
		,SRC_BITMAP
		,SRC_VD
		,SRC_HT_BITMAP
		,SRC_HT_VD
		,SRC_FONT_BITMAP
		,SRC_DEFINED_FONT
		,SRC_PRIVATE_FONT
		,SRC_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;
	CONSTANT SRC_TYPES EQUALS VSTA$K_SRC_LAST_TYPE - 1 PREFIX VSTA$;
/*
/* Define old symbol for source bitmap just so stale sources continue to
/* compile.
/*
	CONSTANT SRC_BM EQUALS VSTA$K_SRC_BITMAP PREFIX VSTA$;

	CONSTANT(
		 MSK_NONE
		,MSK_RECTANGLE
		,MSK_BITMAP
		,MSK_FONT_BITMAP
		,MSK_VD
		,MSK_DEFINED_FONT
		,MSK_PRIVATE_FONT
		,MSK_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT MSK_TYPES EQUALS VSTA$K_MSK_LAST_TYPE - 1 PREFIX VSTA$;

	CONSTANT(
		 DST_BITMAP
		,DST_VD
		,DST_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT DST_TYPES EQUALS VSTA$K_DST_LAST_TYPE - 1 PREFIX VSTA$;


	CONSTANT(
		 DST_UPDATE
		,DST_NO_UPDATE
		,DST_LAST_UPD_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT DST_UPD_TYPES EQUALS VSTA$K_DST_LAST_UPD_TYPE-1 PREFIX VSTA$;


	CONSTANT(
		 MAP_IDENTITY
		,MAP_S_LITERAL
		,MAP_SD_LITERAL
		,MAP_SOURCE
		,MAP_SOURCEDEST
		,MAP_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT(
		 MAP_BLACK
		,MAP_SRC_AND_DST
		,MAP_SRC_AND_NOTDST
		,MAP_SRC
		,MAP_NOTSRC_AND_DST
		,MAP_DST
		,MAP_SRC_XOR_DST
		,MAP_SRC_OR_DST
		,MAP_NOTSRC_AND_NOTDST
		,MAP_NOT_SRCXORDST
		,MAP_NOTDST
		,MAP_SRC_OR_NOTDST
		,MAP_NOTSRC
		,MAP_NOTSRC_OR_DST
		,MAP_NOTSRC_OR_NOTDST
		,MAP_WHITE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;


	CONSTANT MAP_TYPES EQUALS VSTA$K_MAP_LAST_TYPE - 1 PREFIX VSTA$;

	CONSTANT(
		 PTN_SINGLE_SRC
		,PTN_ALTERN_SRC
		,PTN_IDENT
		,PTN_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT PTN_TYPES EQUALS VSTA$K_PTN_LAST_TYPE - 1 PREFIX VSTA$;


	CONSTANT(
		 PTN_UPDATE
		,PTN_NO_UPDATE
		,PTN_LAST_UPD_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT PTN_UPD_TYPES EQUALS VSTA$K_PTN_LAST_UPD_TYPE - 1 PREFIX VSTA$;

	CONSTANT(
		 TXT_8BITS
		,TXT_16BITS
		,TXT_LAST_TYPE
		)
			EQUALS 0 INCREMENT 1 PREFIX VSTA$;

	CONSTANT TXT_TYPES EQUALS VSTA$K_TXT_LAST_TYPE - 1 PREFIX VSTA$;


	CONSTANT NO_EFN EQUALS 0 PREFIX VSTA$;

	CONSTANT NO_AST EQUALS 0 PREFIX VSTA$;

	CONSTANT NO_ASTPRM EQUALS 0 PREFIX VSTA$;
/*
/* MOUSE BUTTON MASKS
/*
	CONSTANT LEFT_MOUSE_BUTTON EQUALS 4 PREFIX VSTA$;
	CONSTANT MIDDLE_MOUSE_BUTTON EQUALS 2 PREFIX VSTA$;
	CONSTANT RIGHT_MOUSE_BUTTON EQUALS 1 PREFIX VSTA$;
	CONSTANT SELECT_BUTTON EQUALS 4 PREFIX VSTA$;
/*
/* RESTRICTIONS ON SDA OBJECT DIMENSIONS
/*
    CONSTANT
	VSTA$K_MAX_WINDOW_HEIGHT EQUALS 824;	/*MAX. ALLOWED WINDOW HEIGHT
    CONSTANT
	VSTA$K_MAX_WINDOW_WIDTH EQUALS 1064;	/*MAX. ALLOWED WINDOW WIDTH
    CONSTANT
	VSTA$K_MAX_SYS_WINDOW_HEIGHT EQUALS 864;/*MAX. ALLOWED WINDOW HEIGHT
    CONSTANT
	VSTA$K_MAX_SYS_WINDOW_WIDTH EQUALS 1088;/*MAX. ALLOWED WINDOW WIDTH
    CONSTANT
	VSTA$K_MAX_VD_AREA EQUALS 940032;	/*MAX. VD AREA (1088 X 864)

/*
/* SELECTABILITY ATTRIBUTES (PASSED TO VSTA$SET_REGION_SELECTABLE)
/*
CONSTANT(
	 SEL_TEXT	/* APPROPRIATE FOR TEXT
	,SEL_AREA	/* APPROPRIATE FOR SOLID AREAS
	,SEL_REVERSE	/* REVERSE VIDEO
	)
		EQUALS 0 INCREMENT 1 PREFIX VSTA$;
/*
/* OEM-MODE VBDRIVER FUNCTION CODES AND MODIFIERS FOR APPLICATION PROGRAMS
/*
/* NOTE: THE CONSTANTS DEFINED BELOW MUST BE EQUIVALENT TO THOSE DEFINED
/*	 IN THE VBDRIVER SYMBOL DEFINITION FILES (VSTADEF). ANY CHANGES
/*	 MUST BE REFLECTED IN BOTH PLACES.
/*
    CONSTANT
	IO$_VSTA_BUTTON EQUALS 23;	/*SAME AS IO$_VB_BUTTON
    CONSTANT
	IO$M_VSTA_EXIT_IDLE EQUALS 128;	/*SAME AS IO$M_VB_EXIT_IDLE
    CONSTANT
	IO$_VSTA_FIBER EQUALS 24;	/*SAME AS IO$_VB_FIBER
    CONSTANT
	IO$M_VSTA_LINK_AST EQUALS 128;	/*SAME AS IO$M_VB_LINK_AST

END_MODULE $VSTAGBL;

!----------------------------------------------------------------------------
!
! FUNCTIONAL DESCRIPTION:
!
! This file contains the macro definitions used in the acp.
!
!---
!
! TABLE OF CONTENTS:
!

keywordmacro!s

	 $DRIVEBACK(
		 CHAN	= 0
		,COLOR	= vsta$k_color_black
		,DST	= 0
		,OFFX	= 0
		,OFFY	= 0
		,WIDTH	= 0
		,HEIGHT	= 0
		,RECNUM	= 0
		,RECADR	= 0
		,EFN	= 0
		,ASTADR	= 0
		,ASTPRM = 0
		) =

	(EXTERNAL ROUTINE VSTA$$DRIVE_PAINT_BG;
	VSTA$$DRIVE_PAINT_BG(
		 CHAN
		,COLOR
		,DST
		,OFFX
		,OFFY
		,WIDTH
		,HEIGHT
		,RECNUM
		,RECADR
		,EFN
		,ASTADR
		,ASTPRM
		))%

	,$DRIVECOPY(
		 CHAN	= 0
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,SRCOFX = 0
		,SRCOFY = 0
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DST	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_COPY_AREA;
	VSTA$$DRIVE_COPY_AREA(
		 CHAN
		,SRCTYP	
		,SOURCE 
		,SRCOFX 
		,SRCOFY 
		,MSKTYP 
		,MASK	
		,DST	
		,DSTOFX 
		,DSTOFY 
		,MAPTYP 
		,MAPVAL 
		,RECNUM
		,RECADR
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%

	,$DRIVEDRAW(
		 CHAN	= 0
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,SRCOFX = 0
		,SRCOFY = 0
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DST	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,PTHNUM = 0
		,PTHADR = 0
		,PATMOD = VSTA$K_ptn_single_src
		,PATACT = VSTA$K_ptn_no_update
		,PATBLK = 0
		,PATSTA	= 0
		,SECTYP = VSTA$K_SRC_CONST
		,SECSRC = 1
		,SECOFX = 0
		,SECOFY	= 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_DRAW_CURVE;
	VSTA$$DRIVE_DRAW_CURVE(
		 CHAN
		,SRCTYP	
		,SOURCE 
		,SRCOFX 
		,SRCOFY 
		,MSKTYP 
		,MASK	
		,DST	
		,DSTOFX 
		,DSTOFY 
		,MAPTYP 
		,MAPVAL 
		,PTHNUM
		,PTHADR
		,PATMOD 
		,PATACT 
		,PATBLK 
		,PATSTA
		,SECTYP
		,SECSRC
		,SECOFX
		,SECOFY
		,RECNUM
		,RECADR
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%

	,$DRIVEPRINT(
		 CHAN	= 0
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DST	= 0
		,DSTOFA = VSTA$K_dst_no_update
		,DSTOFF = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,TXTTYP = VSTA$K_txt_8bits
		,TXTNUM = 0
		,TXTADR = 0
		,CTRNUM = 0
		,CTRADR = 0
		,CHRPAD = 0
		,SPCPAD = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_PRINT_TEXT;
	VSTA$$DRIVE_PRINT_TEXT(
		 CHAN
		,SRCTYP	
		,SOURCE 
		,MSKTYP 
		,MASK	
		,DST
		,DSTOFA
		,DSTOFF
		,MAPTYP 
		,MAPVAL 
		,TXTTYP 
		,TXTNUM
		,TXTADR
		,CTRNUM
		,CTRADR
		,CHRPAD 
		,SPCPAD 
		,RECNUM
		,RECADR
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%

	,$DRIVEFILL(
		 CHAN	= 0
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,DSTTYP = VSTA$K_dst_vd
		,DST	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,PTHNUM = 0
		,PTHADR = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_FILL_AREA;
	VSTA$$DRIVE_FILL_AREA(
		 CHAN
		,SRCTYP	
		,SOURCE 
		,DSTTYP 
		,DST	
		,DSTOFX 
		,DSTOFY 
		,MAPTYP 
		,MAPVAL 
		,PTHNUM
		,PTHADR
		,RECNUM
		,RECADR
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%


	,$DRIVEFLOOD(
		 CHAN	= 0
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,DSTTYP = VSTA$K_dst_vd
		,DST	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,BNDMAP = 0
		,SEEDX	= 0
		,SEEDY  = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_FLOOD_AREA;
	VSTA$$DRIVE_FLOOD_AREA(
		 CHAN
		,SRCTYP	
		,SOURCE 
		,DSTTYP 
		,DST	
		,DSTOFX 
		,DSTOFY 
		,BNDMAP
		,SEEDX
		,SEEDY
		,RECNUM
		,RECADR
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%

	,$DRIVENOOP(
		 CHAN	= 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(EXTERNAL ROUTINE VSTA$$DRIVE_NOOP;
	VSTA$$DRIVE_NOOP(
		 CHAN
		,EFN	
		,ASTADR 
		,ASTPRM 
		))%

!
	,$DRVBACK(
		 ARGBLK
		,CHAN	= .ARG [drv$l_bck_chan]
		,COLOR	= .ARG [drv$l_bck_color]
		,DST	= .ARG [drv$l_bck_dst]
		,OFFX	= .ARG [drv$l_bck_offx]
		,OFFY	= .ARG [drv$l_bck_offy]
		,WIDTH	= .ARG [drv$l_bck_width]
		,HEIGHT	= .ARG [drv$l_bck_height]
		,RECNUM	= .ARG [drv$l_bck_rc_count]
		,RECADR	= .ARG [drv$l_bck_rc_addr]
		,EFN 	= .ARG [drv$l_bck_efn]
		,ASTADR	= .ARG [drv$l_bck_astadr]
		,ASTPRM	= .ARG [drv$l_bck_astprm]
		) =

	(bind ARG = ARGBLK: block [,byte];
	
	 ARG [drv$l_bck_arg_num] = drv$k_bck_arg_num;
	 ARG [drv$l_bck_chan] = CHAN;
	 ARG [drv$l_bck_color] = COLOR;
	 ARG [drv$l_bck_dst] = DST;
	 ARG [drv$l_bck_offx] = OFFX;
	 ARG [drv$l_bck_offy] = OFFY;
	 ARG [drv$l_bck_width] = WIDTH;
	 ARG [drv$l_bck_height] = HEIGHT;
	 ARG [drv$l_bck_rc_count] = RECNUM;
	 ARG [drv$l_bck_rc_addr] = RECADR;
	 ARG [drv$l_bck_efn] = EFN;
	 ARG [drv$l_bck_astadr] = ASTADR;
	 ARG [drv$l_bck_astprm] = ASTPRM;
		)%

	,$DRVCOPY(
		 ARGBLK
		,CHAN	= .ARG [drv$l_cop_chan]
	 	,SRCTYP	= .ARG [drv$l_cop_src_type] 
		,SOURCE	= .ARG [drv$l_cop_src] 
		,SRCOFX	= .ARG [drv$l_cop_src_off_x] 
		,SRCOFY	= .ARG [drv$l_cop_src_off_y] 
		,MSKTYP	= .ARG [drv$l_cop_msk_type] 
		,MASK	= .ARG [drv$l_cop_msk] 
		,DST	= .ARG [drv$l_cop_dst] 
		,DSTOFX	= .ARG [drv$l_cop_dst_off_x] 
		,DSTOFY	= .ARG [drv$l_cop_dst_off_y] 
		,MAPTYP	= .ARG [drv$l_cop_map_type]
		,MAPVAL = .ARG [drv$l_cop_map_value] 
		,RECNUM = .ARG [drv$l_cop_rc_count] 
		,RECADR = .ARG [drv$l_cop_rc_addr] 
		,EFN	= .ARG [drv$l_cop_efn] 
		,ASTADR = .ARG [drv$l_cop_astadr] 
		,ASTPRM = .ARG [drv$l_cop_astprm] 
		) =

	(bind ARG= ARGBLK: block [,byte];

	 ARG [drv$l_cop_arg_num] = drv$k_cop_arg_num;
	 ARG [drv$l_cop_chan] = CHAN;
	 ARG [drv$l_cop_src_type] = SRCTYP;
	 ARG [drv$l_cop_src] = SOURCE;
	 ARG [drv$l_cop_src_off_x] = SRCOFX;
	 ARG [drv$l_cop_src_off_y] = SRCOFY;
	 ARG [drv$l_cop_msk_type] = MSKTYP;
	 ARG [drv$l_cop_msk] = MASK;
	 ARG [drv$l_cop_dst] = DST;
	 ARG [drv$l_cop_dst_off_x] = DSTOFX;
	 ARG [drv$l_cop_dst_off_y] = DSTOFY;
	 ARG [drv$l_cop_map_type] = MAPTYP ;
	 ARG [drv$l_cop_map_value] = MAPVAL ;
	 ARG [drv$l_cop_rc_count] = RECNUM;
	 ARG [drv$l_cop_rc_addr] = RECADR;
	 ARG [drv$l_cop_efn] = EFN	;
	 ARG [drv$l_cop_astadr] = ASTADR ;
	 ARG [drv$l_cop_astprm] = ASTPRM ;
		)%

	,$DRVDRAW(
		 ARGBLK
		,CHAN 	=  .ARG [drv$l_drw_chan] 
		,SRCTYP =  .ARG [drv$l_drw_src_type] 
		,SOURCE =  .ARG [drv$l_drw_src] 
		,SRCOFX =  .ARG [drv$l_drw_src_off_x] 
		,SRCOFY =  .ARG [drv$l_drw_src_off_y] 
		,MSKTYP =  .ARG [drv$l_drw_msk_type] 
		,MASK	=  .ARG [drv$l_drw_msk] 
		,DST	=  .ARG [drv$l_drw_dst] 
		,DSTOFX	=  .ARG [drv$l_drw_dst_off_x] 
		,DSTOFY	=  .ARG [drv$l_drw_dst_off_y] 
		,MAPTYP	=  .ARG [drv$l_drw_map_type] 
		,MAPVAL	=  .ARG [drv$l_drw_map_value] 
		,PTHNUM	=  .ARG [drv$l_drw_path_count] 
		,PTHADR	=  .ARG [drv$l_drw_path_addr] 
		,PATMOD	=  .ARG [drv$l_drw_pattern_mode] 
		,PATACT	=  .ARG [drv$l_drw_pattern_action] 
		,PATBLK	=  .ARG [drv$l_drw_pattern_block] 
		,PATSTA	=  .ARG [drv$l_drw_pattern_state] 
		,SECTYP	=  .ARG [drv$l_drw_sec_type] 
		,SECSRC	=  .ARG [drv$l_drw_sec] 
		,SECOFX	=  .ARG [drv$l_drw_sec_off_x] 
		,SECOFY	=  .ARG [drv$l_drw_sec_off_y] 
		,RECNUM	=  .ARG [drv$l_drw_rc_count] 
		,RECADR	=  .ARG [drv$l_drw_rc_addr] 
		,EFN	=  .ARG [drv$l_drw_efn] 
		,ASTADR	=  .ARG [drv$l_drw_astadr] 
		,ASTPRM	=  .ARG [drv$l_drw_astprm] 
		) =

	(bind ARG = ARGBLK: block [,byte];

	 ARG [drv$l_drw_arg_num] = drv$k_drw_arg_num;
	 ARG [drv$l_drw_chan] = CHAN;
	 ARG [drv$l_drw_src_type] = SRCTYP;
	 ARG [drv$l_drw_src] = SOURCE ;
	 ARG [drv$l_drw_src_off_x] = SRCOFX ;
	 ARG [drv$l_drw_src_off_y] = SRCOFY ;
	 ARG [drv$l_drw_msk_type] = MSKTYP ;
	 ARG [drv$l_drw_msk] = MASK	;
	 ARG [drv$l_drw_dst] = DST	;
	 ARG [drv$l_drw_dst_off_x] = DSTOFX ;
	 ARG [drv$l_drw_dst_off_y] = DSTOFY ;
	 ARG [drv$l_drw_map_type] = MAPTYP ;
	 ARG [drv$l_drw_map_value] = MAPVAL ;
	 ARG [drv$l_drw_path_count] = PTHNUM;
	 ARG [drv$l_drw_path_addr] = PTHADR;
	 ARG [drv$l_drw_pattern_mode] = PATMOD ;
	 ARG [drv$l_drw_pattern_action] = PATACT ;
	 ARG [drv$l_drw_pattern_block] = PATBLK ;
	 ARG [drv$l_drw_pattern_state] = PATSTA;
	 ARG [drv$l_drw_sec_type] = SECTYP ;
	 ARG [drv$l_drw_sec] = SECSRC;
	 ARG [drv$l_drw_sec_off_x] = SECOFX;
	 ARG [drv$l_drw_sec_off_y] = SECOFY;
	 ARG [drv$l_drw_rc_count] = RECNUM;
	 ARG [drv$l_drw_rc_addr] = RECADR;
	 ARG [drv$l_drw_efn] = EFN	;
	 ARG [drv$l_drw_astadr] = ASTADR ;
	 ARG [drv$l_drw_astprm] = ASTPRM ;
		)%

	,$DRVPRINT(
		 ARGBLK
		,CHAN	= .ARG [drv$l_prn_chan] 
		,SRCTYP	= .ARG [drv$l_prn_src_type] 
		,SOURCE	= .ARG [drv$l_prn_src] 
		,SRCOFX	= .ARG [drv$l_prn_src_off_x] 
		,SRCOFY	= .ARG [drv$l_prn_src_off_y] 
		,MSKTYP	= .ARG [drv$l_prn_msk_type] 
		,MASK	= .ARG [drv$l_prn_msk] 
		,DST	= .ARG [drv$l_prn_dst] 
		,DSTOFA	= .ARG [drv$l_prn_dst_off_x] 
		,DSTOFF	= .ARG [drv$l_prn_dst_off_y] 
		,MAPTYP	= .ARG [drv$l_prn_map_type] 
		,MAPVAL	= .ARG [drv$l_prn_map_value] 
		,TXTTYP	= .ARG [drv$l_prn_txt_type] 
		,TXTNUM	= .ARG [drv$l_prn_txt_count] 
		,TXTADR	= .ARG [drv$l_prn_txt_addr] 
		,CTRNUM	= .ARG [drv$l_prn_ctrl_count] 
		,CTRADR	= .ARG [drv$l_prn_ctrl_addr] 
		,CHRPAD	= .ARG [drv$l_prn_char_pad] 
		,SPCPAD	= .ARG [drv$l_prn_space_pad] 
		,RECNUM	= .ARG [drv$l_prn_rc_count] 
		,RECADR	= .ARG [drv$l_prn_rc_addr] 
		,EFN	= .ARG [drv$l_prn_efn] 
		,ASTADR	= .ARG [drv$l_prn_astadr] 
		,ASTPRM	= .ARG [drv$l_prn_astprm] 
		) =
	(bind ARG = ARGBLK: block [,byte];

	 ARG [drv$l_prn_arg_num] = drv$k_prn_arg_num;
	 ARG [drv$l_prn_chan] = CHAN;
	 ARG [drv$l_prn_src_type] = SRCTYP;
	 ARG [drv$l_prn_src] = SOURCE ;
	 ARG [drv$l_prn_src_off_x] = SRCOFX;
	 ARG [drv$l_prn_src_off_y] = SRCOFY;
	 ARG [drv$l_prn_msk_type] = MSKTYP ;
	 ARG [drv$l_prn_msk] = MASK	;
	 ARG [drv$l_prn_dst] = DST;
	 ARG [drv$l_prn_dst_off_x] = DSTOFA;
	 ARG [drv$l_prn_dst_off_y] = DSTOFF;
	 ARG [drv$l_prn_map_type] = MAPTYP ;
	 ARG [drv$l_prn_map_value] = MAPVAL ;
	 ARG [drv$l_prn_txt_type] = TXTTYP ;
	 ARG [drv$l_prn_txt_count] = TXTNUM;
	 ARG [drv$l_prn_txt_addr] = TXTADR;
	 ARG [drv$l_prn_ctrl_count] = CTRNUM;
	 ARG [drv$l_prn_ctrl_addr] = CTRADR;
	 ARG [drv$l_prn_char_pad] = CHRPAD ;
	 ARG [drv$l_prn_space_pad] = SPCPAD ;
	 ARG [drv$l_prn_rc_count] = RECNUM;
	 ARG [drv$l_prn_rc_addr] = RECADR;
	 ARG [drv$l_prn_efn] = EFN	;
	 ARG [drv$l_prn_astadr] = ASTADR ;
	 ARG [drv$l_prn_astprm] = ASTPRM ;
		)%

	,$DRVFILL(
		 ARGBLK
		,CHAN	= .ARG [drv$l_fil_chan] 
		,SRCTYP	= .ARG [drv$l_fil_src_type] 
		,SOURCE	= .ARG [drv$l_fil_src] 
		,DST	= .ARG [drv$l_fil_dst] 
		,DSTOFX	= .ARG [drv$l_fil_dst_off_x] 
		,DSTOFY	= .ARG [drv$l_fil_dst_off_y] 
		,MAPTYP	= .ARG [drv$l_fil_map_type] 
		,MAPVAL	= .ARG [drv$l_fil_map_value] 
		,PTHNUM	= .ARG [drv$l_fil_path_count] 
		,PTHADR	= .ARG [drv$l_fil_path_addr] 
		,RECNUM	= .ARG [drv$l_fil_rc_count] 
		,RECADR	= .ARG [drv$l_fil_rc_addr] 
		,EFN	= .ARG [drv$l_fil_efn] 
		,ASTADR	= .ARG [drv$l_fil_astadr] 
		,ASTPRM	= .ARG [drv$l_fil_astprm] 
		) =

	(bind ARG = ARGBLK: block [,byte];
	
	 ARG [drv$l_fil_arg_num] = drv$k_fil_arg_num;
	 ARG [drv$l_fil_chan] = CHAN;
	 ARG [drv$l_fil_src_type] = SRCTYP;
	 ARG [drv$l_fil_src] = SOURCE ;
	 ARG [drv$l_fil_dst] = DST;
	 ARG [drv$l_fil_dst_off_x] = DSTOFX ;
	 ARG [drv$l_fil_dst_off_y] = DSTOFY ;
	 ARG [drv$l_fil_map_type] = MAPTYP ;
	 ARG [drv$l_fil_map_value] = MAPVAL ;
	 ARG [drv$l_fil_path_count] = PTHNUM;
	 ARG [drv$l_fil_path_addr] = PTHADR;
	 ARG [drv$l_fil_rc_count] = RECNUM;
	 ARG [drv$l_fil_rc_addr] = RECADR;
	 ARG [drv$l_fil_efn] = EFN	;
	 ARG [drv$l_fil_astadr] = ASTADR ;
	 ARG [drv$l_fil_astprm] = ASTPRM ;
		)%


	,$DRVFLOOD(
		 ARGBLK
		,CHAN	= .ARG [drv$l_fld_chan] 
		,SRCTYP	= .ARG [drv$l_fld_src_type] 
		,SOURCE	= .ARG [drv$l_fld_src] 
		,DST	= .ARG [drv$l_fld_dst] 
		,DSTOFX	= .ARG [drv$l_fld_dst_off_x] 
		,DSTOFY	= .ARG [drv$l_fld_dst_off_y] 
		,BNDMAP	= .ARG [drv$l_fld_boundary_map] 
		,SEEDX	= .ARG [drv$l_fld_seed_x] 
		,SEEDY	= .ARG [drv$l_fld_seed_y] 
		,RECNUM	= .ARG [drv$l_fld_rc_count] 
		,RECADR	= .ARG [drv$l_fld_rc_addr] 
		,EFN	= .ARG [drv$l_fld_efn] 
		,ASTADR	= .ARG [drv$l_fld_astadr] 
		,ASTPRM	= .ARG [drv$l_fld_astprm] 
		) =
	(bind ARG = ARGBLK: block [,byte];

	 ARG [drv$l_fld_arg_num] = drv$k_fld_arg_num;
	 ARG [drv$l_fld_chan] = CHAN;
	 ARG [drv$l_fld_src_type] = SRCTYP;
	 ARG [drv$l_fld_src] = SOURCE ;
	 ARG [drv$l_fld_dst] = DST	;
	 ARG [drv$l_fld_dst_off_x] = DSTOFX ;
	 ARG [drv$l_fld_dst_off_y] = DSTOFY ;
	 ARG [drv$l_fld_boundary_map] = BNDMAP;
	 ARG [drv$l_fld_seed_x] = SEEDX;
	 ARG [drv$l_fld_seed_y] = SEEDY;
	 ARG [drv$l_fld_rc_count] = RECNUM;
	 ARG [drv$l_fld_rc_addr] = RECADR;
	 ARG [drv$l_fld_efn] = EFN	;
	 ARG [drv$l_fld_astadr] = ASTADR ;
	 ARG [drv$l_fld_astprm] = ASTPRM ;
		)%
	;

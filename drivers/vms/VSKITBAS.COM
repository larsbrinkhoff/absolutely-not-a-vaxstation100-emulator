$! ----------------------------------------------------------------------------
$!
$! VSKITBAS.COM : Does installation of VSTA basic kit.
$!
$	sav_verify = F$VERIFY()		! Save VERIFY status
$	SET NOVERIFY
$	WO := WRITE SYS$OUTPUT
$	ON ERROR THEN GOTO error_exit
$	ON CONTROL_Y THEN GOTO control_y_abort
$!	install_status == 0		! Initialize intall_status
$	kit_debug := 'p1'
$!
$	WO ""
$	WO ""
$!
$!!
$	@DEFKITLOG.COM 'kit_debug' ! Define the logicals we need
$ do_links_1:
$! BLDMSG in open code
$!
$	VMI$CALLBACK PROVIDE_IMAGE  MSG1 VSTAERRS.EXE	VMI$ROOT:[SYSMSG]
$	VMI$CALLBACK PROVIDE_FILE   MSG2 VSTAERRS.MAP	VMI$ROOT:[SYSMSG]
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSMSG]VSTAERRS.EXE "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSMSG]VSTAERRS.MAP "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$!
$! do bldshr in open code
$!
$	VMI$CALLBACK PROVIDE_IMAGE  SHR1 VSTASHR.EXE	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   SHR2 VSTASHR.MAP	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSLIB]VSTASHR.EXE "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSMSG]VSTASHR.MAP "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$!
$! The following command replaces the module if it was already
$! in the library, else it inserts it.
$!
$	VMI$CALLBACK UPDATE_LIBRARY vstashr VMI$ROOT:[SYSLIB]IMAGELIB.OLB -
	SHARE "REPLACE/SELECT" VSTASHR.EXE
$!
$! do bldcgl in open code
$!
$	VMI$CALLBACK PROVIDE_IMAGE  CGL1 CGLSHR.EXE	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   CGL2 CGLSHR.MAP	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSLIB]CGLSHR.EXE "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$	VMI$CALLBACK SECURE_FILE VMI$ROOT:[SYSLIB]CGLSHR.MAP "" -
SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RE
$!
$! The following command replaces the module if it was already
$! in the library, else it inserts it.
$!
$	VMI$CALLBACK UPDATE_LIBRARY cglshr VMI$ROOT:[SYSLIB]IMAGELIB.OLB -
	SHARE "REPLACE/SELECT" CGLSHR.EXE
$!
$!!	SYMINS.COM in open code
$!instal language libraries
$!
$! Move all the appropriate language files to their destination directories
$!
$! Create a VSTA library for MACRO
$!
$  library/create/macro VMI$ROOT:[SYSLIB]vstamac.mlb vstamsg.mar,vstagbl.mar
$!
$! Do the fortran files
$!
$!  copy/nolog vstamsg.for,vstagbl.for sys$library:
$	VMI$CALLBACK PROVIDE_FILE   SYM1 VSTAMSG.FOR	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   SYM2 VSTAGBL.FOR	VMI$ROOT:[SYSLIB]
$!
$! Do the pascal environments (if possible) and copy pascal sources
$!
$dopas:
$!  if "''f$search("sys$system:pascal.exe")'" .eqs. "" then goto jpas
$	VMI$CALLBACK FIND_FILE PASCAL VMI$ROOT:[SYSEXE]PASCAL.EXE "" S found
$	IF "''found'" .NES. "S" THEN GOTO jpas
$  pascal/noobj/envir=VMI$ROOT:[SYSLIB]vstagbl.pen vstagbl.pas
$  pascal/noobj/envir=VMI$ROOT:[SYSLIB]vstamsg.pen vstamsg.pas
$jpas:
$	VMI$CALLBACK PROVIDE_FILE   SYM3 VSTAMSG.PAS	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   SYM4 VSTAGBL.PAS	VMI$ROOT:[SYSLIB]
$!
$! Do the PL1 library (our own for VAXstation software)
$!
$dopli:
$  library/create/text sys$library:vstapli.tlb-
 vstamsg.pli/mod=$vstamsg,vstagbl.pli/mod=$vstagbl
$!
$! Do the bliss library files (our own for VAXstation software)
$!
$dobli:
$!  if "''f$search("sys$system:bliss32.exe")'" .eqs. "" then goto jr32
$	VMI$CALLBACK FIND_FILE BLISS32 VMI$ROOT:[SYSEXE]BLISS32.EXE "" S found
$	IF "''found'" .NES. "S" THEN GOTO jr32
$  bliss/nolis/lib=VMI$ROOT:[SYSLIB]vstagbl.l32 vstagbl.r32
$  bliss/nolis/lib=VMI$ROOT:[SYSLIB]vstamsg.l32 vstamsg.r32
$jr32:
$	VMI$CALLBACK PROVIDE_FILE   SYM5 VSTAMSG.R32	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   SYM6 VSTAGBL.R32	VMI$ROOT:[SYSLIB]
$!
$! Copy the VAX-11 C library files (our own for VAXstation software)
$!
$docc:
$	VMI$CALLBACK PROVIDE_FILE   SYM7 VSTAMSG.H	VMI$ROOT:[SYSLIB]
$	VMI$CALLBACK PROVIDE_FILE   SYM8 VSTAGBL.H	VMI$ROOT:[SYSLIB]
$!
$!
$!
$! all the images to exe area
$!
$	VMI$CALLBACK PROVIDE_IMAGE  E06	VBDRIVER.EXE	VMI$ROOT:[SYSEXE]
$!
$	VMI$CALLBACK PROVIDE_IMAGE  E01	VSACP.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E02	STOPACP.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E03	STOPACPS.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E04	STARTACP.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E05	VSHILOGN.EXE	VMI$ROOT:[VSTA.EXE]
$!	VMI$CALLBACK PROVIDE_IMAGE  E06	VBDRIVER.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E07	VDDRIVER.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_FILE   E08	VSACP.MAP	VMI$ROOT:[VSTA.EXE]
$!
$	VMI$CALLBACK PROVIDE_IMAGE  E10	VSTAPRINT.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E12	VSTASTUB.EXE	VMI$ROOT:[VSTA.EXE]
$	VMI$CALLBACK PROVIDE_IMAGE  E13	CGLSTUB.EXE	VMI$ROOT:[VSTA.EXE]
$!
$! check if the VSACP.PRM is present on target system, provide otherwise
$	VMI$CALLBACK FIND_FILE VSACPPRM VMI$ROOT:[VSTA.EXE]VSACP.PRM "" S found
$	IF "''found'" .EQS. "S" THEN GOTO move_next
$	VMI$CALLBACK PROVIDE_FILE   E14	VSACP.PRM	VMI$ROOT:[VSTA.EXE]
$ move_next:
$!
$!
$! all the HILIB files to hilib area
$	VMI$CALLBACK PROVIDE_FILE   H01	CTRLBAR.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H02	DATAPAD.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H03	HELPENG.EDF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H04	HOST.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H05	KBDMODEL.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H06	KEYCAP.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H07	MFENG.MF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H08	MFHLP.MF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H09	MONITORBK.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H10	MONITORFR.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H11	MOUSE.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H12	PROFENG.EDF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H13	SYMBOL.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H14	TEKCTRLBR.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H15	TEKLWRBAR.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H16	TS100ENG.EDF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H17	TS4014ENG.EDF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H18	VS100.FNT	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H19	VSTATEST.PRF	VMI$ROOT:[VSTA.HILIB]
$	VMI$CALLBACK PROVIDE_FILE   H20	SYSSITE.PRF	VMI$ROOT:[VSTA.HILIB]
$!
$ copy_next:
$!
$! all font files to font area
$	VMI$CALLBACK PROVIDE_FILE   F01	ACCORD.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F02	ACCORDB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F03	FONTSDEF.TXT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F04	HISYMBOL.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F05	ICONS.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F06	K28BOT.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F07	K28BOTB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F08	K28TOP.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F09	K28TOPB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F10	KBSYM.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F11	KILTER.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F12	KILTER10.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F13	KILTER28.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F14	KILTER28B.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F15	KILTERB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F16	KILTERCRN.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F17	KILTERD.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F18	KILTERDB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F19	LEDS.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F20	NIL2.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F21	NOECHO14.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F22	PELLUC12.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F23	PELLUC12B.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F24	PELLUC12I.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F25	PELLUC15.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F26	PELLUC15B.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F27	PELLUC15I.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F28	PELLUC20.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F29	POINTERS.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F30	K14BLD.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F31	K14BLDB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F32	K14BLINK.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F33	K14BLINKB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F34	K28BL.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F35	K28BLB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F36	K28BLBOT.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F37	K28BLBOTB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F38	K28BLTOP.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F39	K28BLTOPB.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F40	HISYMBOL1.FNT	VMI$ROOT:[VSTA.FONT]
$	VMI$CALLBACK PROVIDE_FILE   F41	NOECHO6.FNT	VMI$ROOT:[VSTA.FONT]
$!
$! micro-code to micro area
$	VMI$CALLBACK PROVIDE_IMAGE  M01	VS100FW.BIN	VMI$ROOT:[VSTA.MICRO]
$!
$! all the com files to com area
$	VMI$CALLBACK PROVIDE_FILE   C01	SYSGENVD.COM	VMI$ROOT:[VSTA.COM]
$ !	vbload provide was moved to vbload creatation routine above. [Eirikur]
$	VMI$CALLBACK PROVIDE_FILE   C03	VSTASTART.COM	VMI$ROOT:[VSTA.COM]
$!
$! printer files
$	VMI$CALLBACK PROVIDE_FILE   C04	VSTAQUE.COM	VMI$ROOT:[VSTA.COM]
$	VMI$CALLBACK PROVIDE_FILE   C05	SUBPRINT.COM	VMI$ROOT:[VSTA.COM]
$	VMI$CALLBACK PROVIDE_FILE   C06	VSTAPRINT.COM	VMI$ROOT:[VSTA.COM]
$!
$! insert the VAXstation HELP file in the help-library
$	VMI$CALLBACK UPDATE_LIBRARY vstahlp VMI$ROOT:[SYSHLP]HELPLIB.HLB -
	HELP "REPLACE" VSTAHELP.HLP
$!
$! insert moving of example programs here
$	VMI$CALLBACK PROVIDE_FILE  EG1	1APPENDIX.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG2	1CHAPTER2.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG3	1CHAPTER3.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG4	1CHAPTER4.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG5	1CHAPTER5.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG6	BCALLING.BAS	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG7	BOXES.COB	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG8	BUG1A.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG9	BUGFONT.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG10	CGLFILL2.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG11	CGLVIEWP.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG12	CHAP4ILLS.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG13	CHARJUST.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG14	CHARSPACE.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG15	EMVT100.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG16	ERRORS.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG17	FCALLING.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG18	GRAYS.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG19	LINESTYLE.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG20	LINEWIDTH.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG21	MARKERS.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG22	MENU.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG23	MOUSE.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG24	PCALLING.PAS	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG25	PLICALL.PLI	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG26	SCROLL.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG27	TEXT.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG28	WRITEMODE.FOR	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG29	XMPL.B32	VMI$ROOT:[VSTA.EXAMPLES]
$	VMI$CALLBACK PROVIDE_FILE  EG30	BUILDALL.COM	VMI$ROOT:[VSTA.EXAMPLES]
$!
$! insert copying of UETP files here
$	@UETVSTA99.COM
$!
$	GOTO all_done
$!
$ control_y_abort:
$	WO "Installation of ''product' aborted by control Y"
$	VMI$CALLBACK MESSAGE I TIME "Time is: ''F$TIME()'"
$	VMI$CALLBACK CONTROL_Y
$	GOTO error_exit
$!
$ link_errors:
$	WO ""
$	WO "???????????????????????????????????????????????????????????"
$	WO "An error detected during installation, please contact your"
$	WO "Digital representative for replacement installation kit."
$	WO "???????????????????????????????????????????????????????????"
$	WO ""
$ error_exit:
$	install_status == 1		! Got an error
$	GOTO all_done
$ all_done:
$	@DEAKITLOG.COM 'kit_debug'	! Deassign the logicals
$	IF sav_verify THEN SET VERIFY	! Restore VERIFY status
$	EXIT

!----------------------------------------------------------------------------
!
! FUNCTIONAL DESCRIPTION:
!
! This file contains the macro definitions used in the acp.
!
!---

require 'vsta$library:vsvdsvdc.r32';



keywordmacro!s

	 $VDCBACK(
		 VDCBLK
		,COLOR	= vsta$k_color_black
		,OFFX	= 0
		,OFFY	= 0
		,WIDTH	= 0
		,HEIGHT	= 0
		,RECNUM	= 0
		,RECADR	= 0
		,EFN	= 0
		,ASTADR	= 0
		,ASTPRM = 0
		) =

	(bind BLK = VDCBLK: block [,byte];

		BLK [VDC$L_TYPE]	= vsta$k_background;
		BLK [VDC$A_SRC]		= COLOR;
		BLK [VDC$W_DOX]		= OFFX;
		BLK [VDC$W_DOY]		= OFFY;
		BLK [VDC$W_WIDTH]	= WIDTH;
		BLK [VDC$W_HEIGHT]	= HEIGHT;
		BLK [VDC$W_RCC]		= RECNUM;
		BLK [VDC$A_RCA]		= RECADR;
		BLK [VDC$L_EFN]		= EFN;
		BLK [VDC$A_ASTADR]	= ASTADR;
		BLK [VDC$L_ASTPRM]	= ASTPRM;
		)%

	,$VDCCOPY(
		 VDCBLK
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,SRCOFX = 0
		,SRCOFY = 0
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(bind BLK=VDCBLK: block [,byte];

		BLK [VDC$L_TYPE]	= vsta$k_copy_area;
		BLK [VDC$W_SRC_TYPE]	= SRCTYP;
		BLK [VDC$A_SRC]		= SOURCE ;
		BLK [VDC$W_SOX]		= SRCOFX ;
		BLK [VDC$W_SOY]		= SRCOFY ;
		BLK [VDC$W_MSK_TYPE]	= MSKTYP ;
		BLK [VDC$A_MSK]		= MASK	;
		BLK [VDC$W_DOX]		= DSTOFX ;
		BLK [VDC$W_DOY]		= DSTOFY ;
		BLK [VDC$W_MAP_TYPE]	= MAPTYP ;
		BLK [VDC$A_MAP]		= MAPVAL ;
		BLK [VDC$W_RCC]		= RECNUM;
		BLK [VDC$A_RCA]		= RECADR;
		BLK [VDC$L_EFN]		= EFN	;
		BLK [VDC$A_ASTADR]	= ASTADR ;
		BLK [VDC$L_ASTPRM]	= ASTPRM ;
		)%

	,$VDCDRAW(
		 VDCBLK
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,SRCOFX = 0
		,SRCOFY = 0
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DSTOFX = 0
		,DSTOFY = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,PTHNUM = 0
		,PTHADR = 0
		,PATMOD = VSTA$K_ptn_single_src
		,PATACT = VSTA$K_ptn_no_update
		,PATBLK = 0
		,PATSTA	= 0
		,SECTYP = VSTA$K_SRC_CONST
		,SECSRC = 1
		,SECOFX = 0
		,SECOFY	= 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(bind BLK=VDCBLK: block [,byte];

		BLK [VDC$L_TYPE]	= vsta$k_draw_curve;
		BLK [VDC$W_SRC_TYPE]	= SRCTYP ;
		BLK [VDC$A_SRC]		= SOURCE ;
		BLK [VDC$W_SOX]		= SRCOFX ;
		BLK [VDC$W_SOY]		= SRCOFY ;
		BLK [VDC$W_MSK_TYPE]	= MSKTYP ;
		BLK [VDC$A_MSK]		= MASK	;
		BLK [VDC$W_DOX]		= DSTOFX ;
		BLK [VDC$W_DOY]		= DSTOFY ;
		BLK [VDC$W_MAP_TYPE]	= MAPTYP ;
		BLK [VDC$A_MAP]		= MAPVAL ;
		BLK [VDC$W_PATH_COUNT]	= PTHNUM;
		BLK [VDC$A_PATH]	= PTHADR;
		BLK [VDC$W_PATTERN_MODE]	= PATMOD ;
		BLK [VDC$W_PATTERN_ACTION]	= PATACT ;
		BLK [VDC$A_PATTERN_BLOCK]	= PATBLK ;
		BLK [VDC$A_PATTERN_STATE]	= PATSTA;
		BLK [VDC$W_SEC_TYPE]	= SECTYP;
		BLK [VDC$A_SEC]		= SECSRC;
		BLK [VDC$W_SSX]		= SECOFX;
		BLK [VDC$W_SSY]		= SECOFY;
		BLK [VDC$W_RCC]		= RECNUM;
		BLK [VDC$A_RCA]		= RECADR;
		BLK [VDC$L_EFN]		= EFN	;
		BLK [VDC$A_ASTADR]	= ASTADR ;
		BLK [VDC$L_ASTPRM]	= ASTPRM ;
		)%

	,$VDCPRINT(
		 VDCBLK
		,SRCTYP	= VSTA$K_SRC_CONST
		,SOURCE = 1
		,MSKTYP = VSTA$K_msk_none
		,MASK	= 0
		,DSTOFA = VSTA$K_dst_no_update
		,DSTOFF = 0
		,MAPTYP = VSTA$K_map_identity
		,MAPVAL = 0
		,TXTTYP = VSTA$K_txt_8bits
		,TXTNUM = 0
		,TXTADR = 0
		,CTRNUM = 0
		,CTRADR = 0
		,CHRPAD = 0
		,SPCPAD = 0
		,RECNUM = 0
		,RECADR = 0
		,EFN	= 0
		,ASTADR = 0
		,ASTPRM = 0
		) =
	(bind BLK=VDCBLK: block [,byte];

		BLK [VDC$L_TYPE]	= vsta$k_print_text;
		BLK [VDC$W_SRC_TYPE]	= SRCTYP;
		BLK [VDC$A_SRC]		= SOURCE ;
		BLK [VDC$W_MSK_TYPE]	= MSKTYP ;
		BLK [VDC$A_MSK]		= MASK	;
		BLK [VDC$W_DOA]		= DSTOFA;
		BLK [VDC$A_DOF]		= DSTOFF;
		BLK [VDC$W_MAP_TYPE]	= MAPTYP ;
		BLK [VDC$A_MAP]		= MAPVAL ;
		BLK [VDC$W_TXT_TYPE]	= TXTTYP ;
		BLK [VDC$W_TXTNUM]	= TXTNUM;
		BLK [VDC$A_TXTADR]	= TXTADR;
		BLK [VDC$W_CONTROL_COUNT]	= CTRNUM;
		BLK [VDC$A_CONTROL_ADDR]	= CTRADR;
		BLK [VDC$W_CHAR_PAD]	= CHRPAD ;
		BLK [VDC$W_SPACE_PAD]	= SPCPAD ;
		BLK [VDC$W_RCC]		= RECNUM;
		BLK [VDC$A_RCA]		= RECADR;
		BLK [VDC$L_EFN]		= EFN	;
		BLK [VDC$A_ASTADR]	= ASTADR ;
		BLK [VDC$L_ASTPRM]	= ASTPRM ;
		)%

	;
